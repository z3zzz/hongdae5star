{"_id":"6741bdb79b76444f9c98fea71d38ffe3","note1":"","note2":"","note3":"","note4":""}
{"_id":"d5ad4df03a914012817bdf4c63d0775b","note1":"<페이지 포맷>\n1. rendering page ('/') : 사이트 설명 페이지, 데이터 렌더링 시간끄는 기능\n - https://www.youtube.com/watch?v=htw4iKMYzEc     (full page scroll)\n - https://www.youtube.com/watch?v=S18Wh9IELo0    (scroll animation)\n2. main page ('/main'): 다양한 그래프 시각화\n3. 설명 페이지('/explanation-general'): 전체적인 자료 제작 과정과 원리 \n4. 설명 페이지('/explation-intelligence'): 인공지능 부분 과정과 원리\n5. 결과 정리 페이지('/insight'): 분석 결과 정리\n6. 팀 멤버 페이지 ('/team'): 팀 멤버 소개\n\n\n<개선방법>\n1. mongoDB: (특히 기사목록) 날짜, 카테고리(혹은 제목 키워드), 신문사로 쿼리할 수 있게 설계\n2. 기사목록은 우선 2000개 정도만 (+전체기사 수만 따로) 가져오고, 이후 비동기로 나머지 기사들 가져오게 \n\n4. LDA, wordCloud 추가 (D3 js)\n\n<페이지>\n1. history api\n2. scroll animation\n3. pre-fetch\n\n## 발표내용\n\n1. 필수 내용\n    \n    발표자료 구성 시 필수적으로 포함되어야하는 내용입니다.\n    \n    - 서비스 소개 및 개발 동기 또는 이유\n        - 예1) 코더랜드 주민들을 위한 공유 킥보드 웹 서비스\n        - 예2) 코더랜드 동사무소에서 공유 킥보드 대여 서비스를 운영하고 있었으나 서비스에 대한 접근성이 떨어져 이를 해결하기 위해 서비스 개발\n        - 예3) 어플리케이션이 아닌 웹 서비스로 구성, 접근성을 높힘\n    - 주요 기능 (기술적)\n        - 예1) JWT Token을 활용한 로그인 기능 구현\n        - 예2) Docker를 활용한 개발 - 서비스 환경 통일\n        - 예3) Flask를 활용한 Backend 환경 구축\n    - 데모 시연\n        - 로컬 데모 시연이 아닌 **엘리스에서 제공한 AWS EC2를 활용한 데모 시연**\n    - 팀원 소개\n\n2.  최종평가\n독창성\t· 기존에 존재하는 서비스와는 구별되는 특성*이 있습니까?\n(*특성에 포함될 수 있는 것 : 기능, 솔루션, 디자인적인 우수성, 아이디어 등.)\n유용성\t· 구현된 서비스는 명확한 목적과 주제를 가지고 있습니까?\n· 단순한 정보의 나열이 아니라, 사용자가 새로운 정보를 탐색하고 습득할 수 있도록\n돕거나 사용자의 특정 문제를 해결해 줍니까?\n· 사용자의 문제를 해결할 수 있는 논리성을 갖추고 있습니까?\n주제 이해\t· 기획한 주제*에 대한 충분한 이해를 바탕으로 서비스가 구현 되었습니까?\n(*주제 : 주어진 데이터를 분석해 코로나 시대 유의미한 인사이트 도출합니다.\n이를 토대로 이용자와 미이용자를 위한 웹 서비스 개발합니다.)\n기술력\t· 서비스의 주제를 실현하기에 충분한 기능이 구현되어 있습니까?\n· 주제와 목적을 달성하는데 적합한 데이터 엔지니어링 기술이 적용되었습니까?\n· 기술적 오류나 결점이 없습니까?\n사용성(UI/UX)\t· 사용자가 서비스를 이용할 때의 편의성*이 충분히 고려되었습니까?\n(*편의성에 포함될 수 있는 것 : 메뉴·사이트맵·검색 기능이 직관적임, 페이지 구성이\n논리적임, 사용자가 목적을 달성하기까지의 과정이 간명함 등)\n주제이해 (개인)\t· 기획한 주제에 대한 충분한 이해를 바탕으로 기능이 구현되었습니까?\n기술력 (개인)\t· 기술적 오류가 없습니까? 코드가 오류 없이 실행되고 있습니까?\n결과물 완성도 (개인)\t· 기획서에 작성된 기능이 완성 되어있습니까?","note2":"1) 서치박스 직접 만들기\n3) API 분리, 그래프 자동화 하기 \n4) json 업로드, 다운로드 페이지 만들기\n\n5) 홈화면 설명페이지로 따로 만들기 애니메이션 슬라이드 스크롤, \n스크롤 하라는 팝업 후 스크롤 다 히면 클릭하라는 팝업\n-참고 https://clova.ai/ko     https://reactjs.org/      https://toss.im/    https://discord.com/nitro\nmongoexport --db final_data --collection line_graph --out line_graph.jso\nhttps://dogstudio.co/studio/\nhttps://dogstudio.co/careers/\n\n6) backgorund image \nhttps://github.com/adrianhajdin/project_graphql_blog/blob/main/public/bg.jpg\n\n    '날짜': '2021.08.01',\n    '사회': 0.1063175169,\n    '경제': 0.2484245115,\n    '생활/문화': 0.2248552807,\n    '정치': 0.2256831721\n  }\n\ninfections\n\n  {\n    _id: ObjectId(\"61a824a3b74c28c86d3f5fea\"),\n    date: '2021.01.20',\n    month: '01',\n    corona: '404',\n    new: 'yes'\n  }\n[\n  {\n    _id: ObjectId(\"61a824a3b74c28c86d3f6125\"),\n    date: 'total',\n    month: '',\n    corona: '386508',\n    new: 'yes'\n  }\n]\nstatistics\n  {\n    _id: ObjectId(\"61a78249d67344315e73b28f\"),\n    date: 'total',\n    keyword: '교육',\n    company: '동아일보',\n    total: 419,\n    positive: 267,\n    negative: 84,\n    normal: 68\n  }\n\nline_graph\n  {\n    _id: ObjectId(\"61a820d766c05b10fc00de91\"),\n    date: '2021.08.11',\n    social: 0.1427675631,\n    economics: 0.3551385472,\n    life: 0.341213487,\n    politics: 0.1638629403,\n    month: '08',\n    new: 'yes'\n  }\nnewses\n  {\n    _id: ObjectId(\"61a5ebcd4a92cd9525f32ef0\"),\n    time: '2021.07.01. 오전 3:02',\n    category: [ '사회' ],\n    text_headline: '文대통령, 헌법기관장 초청 오찬',\n    text_company: '동아일보',\n    context_url: 'https://news.naver.com/main/read.naver?mode=LS2D&mid=shm&sid1=102&sid2=264&oid=020&aid=0003367276'\n,\n    label: '부정',\n    date: '2021.07.01'\n  }\nrankings\n  {\n    _id: ObjectId(\"61a7d568bbbc217ccbb3be39\"),\n    positive_ranking: [\n      [ '매일신문', 72.2 ],\n      [ '중앙일보', 68.9 ],\n      [ '아시아경제', 68.3 ],\n      [ '뉴시스', 65 ],\n      [ '헤럴드경제', 65 ]\n    ],\n    negative_ranking: [\n      [ 'KBS', 25.4 ],\n      [ '머니투데이', 25.3 ],\n      [ '노컷뉴스', 21.7 ],\n      [ '중앙일보', 19.2 ],\n      [ '서울경제', 19.1 ]\n    ],\n    normal_ranking: [\n      [ '전자신문', 22.5 ],\n      [ '파이낸셜뉴스', 21.6 ],\n      [ '뉴시스', 21 ],\n      [ '연합뉴스', 20.6 ],\n      [ '서울경제', 20.5 ]\n    ],\n    number_of_newses: {\n      '연합뉴스': 9508,\n      '뉴시스': 9608,\n      KBS: 646,\n      '중앙일보': 569,\n      '머니투데이': 867,\n      '뉴스1': 7619,\n      '파이낸셜뉴스': 1446,\n      '노컷뉴스': 727,\n      '헤럴드경제': 1062,\n      '이데일리': 1446,\n      '아시아경제': 922,\n      '매일경제': 643,\n      '전자신문': 834,\n      '서울경제': 766,\n      '매일신문': 600\n    },\n    criteria: 544,\n    number_of_companies: 82,\n    date: 'total',\n    keyword: '교육'\n  }\nselectors\n  {\n    _id: ObjectId(\"61a76da14585a226d45c0454\"),\n    keywords: [\n      '교육',     'IT',\n      '대선',     '백신',\n      '부동산',   '수도권',\n      '여행',     '자영업',\n      '주식',     '친환경',\n      '코로나',   '정치',\n      '경제',     '사회',\n      '생활문화'\n    ],\n    dates: [\n      '2021.07.01', '2021.07.21', '2021.08.01', '2021.08.10', '2021.08.02',\n      '2021.08.03', '2021.07.02', '2021.08.04', '2021.08.05', '2021.07.03',\n      '2021.07.04', '2021.07.05', '2021.08.06', '2021.08.07', '2021.08.08',\n      '2021.07.06', '2021.08.09', '2021.07.07', '2021.08.11', '2021.08.12',\n      '2021.07.08', '2021.08.13', '2021.07.09', '2021.08.14', '2021.08.15',\n      '2021.07.10', '2021.07.11', '2021.07.12', '2021.07.22', '2021.07.13',\n      '2021.07.14', '2021.08.16', '2021.08.17', '2021.07.15', '2021.07.16',\n      '2021.07.17', '2021.07.18', '2021.07.19', '2021.08.18', '2021.07.20',\n      '2021.08.19', '2021.08.20', '2021.08.21', '2021.08.22', '2021.08.23',\n      '2021.08.24', '2021.08.25', '2021.07.23', '2021.07.24', '2021.07.25',\n      '2021.07.26', '2021.08.26', '2021.07.27', '2021.08.27', '2021.08.28',\n      '2021.08.29', '2021.08.30', '2021.07.28', '2021.07.29', '2021.08.31',\n      '2021.07.30', '2021.07.31', '2021.06.05', '2021.06.01', '2021.06.13',\n      '2021.06.15', '2021.06.09', '2021.06.03', '2021.06.07', '2021.06.11',\n      '2021.06.06', '2021.06.14', '2021.06.12', '2021.06.02', '2021.06.16',\n      '2021.06.10', '2021.06.04', '2021.06.08', '2021.06.30', '2021.06.29',\n      '2021.06.27', '2021.06.26', '2021.06.25', '2021.06.28', '2021.04.01',\n      '2021.01.01', '2021.04.02', '2021.01.02', '2021.01.03', '2021.04.03',\n      '2021.01.04', '2021.04.04', '2021.01.05', '2021.04.05', '2021.01.06',\n      '2021.01.07', '2021.04.06', '2021.04.07', '2021.01.08', '2021.04.08',\n      '2021.01.09', '2021.01.10', '2021.01.11', '2021.04.09', '2021.04.10',\n      '2021.04.11', '2021.04.12', '2021.01.12', '2021.01.13', '2021.01.14',\n      '2021.04.13', '2021.01.15', '2021.04.14', '2021.01.16', '2021.01.17',\n      '2021.04.15', '2021.01.18', '2021.04.16', '2021.04.17', '2021.04.18',\n      '2021.04.19', '2021.01.19', '2021.04.20', '2021.04.21', '2021.01.20',\n      '2021.04.22', '2021.01.21', '2021.04.23', '2021.04.24', '2021.04.25',\n      '2021.04.26', '2021.01.22', '2021.01.23', '2021.01.24', '2021.04.27',\n      '2021.01.25', '2021.01.26', '2021.04.28', '2021.01.27', '2021.04.29',\n      '2021.01.28', '2021.04.30', '2021.01.29', '2021.05.01', '2021.05.02',\n      '2021.05.03', '2021.01.30', '2021.01.31', '2021.02.01', '2021.05.04',\n      '2021.02.02', '2021.05.05', '2021.05.06', '2021.02.03', '2021.02.04',\n      '2021.05.07', '2021.05.08', '2021.05.09', '2021.02.05', '2021.05.10',\n      '2021.02.06', '2021.02.07', '2021.02.08', '2021.02.09', '2021.02.10',\n      '2021.05.11', '2021.02.11', '2021.02.12', '2021.05.12', '2021.02.13',\n      '2021.02.14', '2021.02.15', '2021.05.13', '2021.02.16', '2021.05.14',\n      '2021.02.17', '2021.05.15', '2021.05.16', '2021.02.18', '2021.05.17',\n      '2021.05.18', '2021.02.19', '2021.05.19', '2021.02.20', '2021.02.21',\n      '2021.02.22', '2021.05.20', '2021.02.23', '2021.02.24', '2021.02.25',\n      '2021.05.21', '2021.02.26', '2021.05.22', '2021.02.27', '2021.02.28',\n      '2021.03.01', '2021.03.02', '2021.03.03', '2021.03.04', '2021.03.05',\n      '2021.05.23', '2021.03.06', '2021.03.07', '2021.03.08', '2021.03.09',\n\n\n","note3":"3. css 기초 정리 - media@, animation\n animation library https://www.youtube.com/watch?v=0kmFlBJIUkQ \n\n5. Seo 적용\n6. Window 도 object 이므로 global property 새로 만들 수 있다.\n7. hexadecimal 이해하기 \nhttps://www.rapidtables.com/convert/number/decimal-to-hex.html?x=100\n\n8. javascript 추가 공부 \nhttps://www.makeuseof.com/tag/es6-javascript-programmers-need-know/\n\n<공부하기>\n\n4. 엘리스 강의 class inheritance\n\n5. Bocket js, 서버는 안보이게 해야 보안?, iframe, js best ui library 검색해보고 괜찮은거 보이면 쓴다. \n\n7. Process thread 공부\n8. Github commitment 방법, 페이지 관리하는 방법 검색해서 배우기 \n\n\n<정리할 것>\n1. hexadecimal\n2. css 영상 본건 다 정리 \n - css 4종세트\n - 애니메이션 https://www.youtube.com/watch?v=YszONjKpgg4&list=PLZlA0Gpn_vH8mpXIUHjWoMAAgoCEinL0R\n - css 강의 목록 https://www.youtube.com/watch?v=S-VeYcOCFZw&list=PLZlA0Gpn_vH8mpXIUHjWoMAAgoCEinL0R&index=2\n \n\n<추가배운것>\n1. react로 구성된 페이지는 일반 html 보는 방식으로 볼 수 없다. react 개발자도구 크롬 익스텐션 따로 써야 한다.\n2. 개발자도구에서 props의 컴포넌트들을 바꾸면 html이 바뀐다. \n3. tdd 는 사람마다 정말 방식이 제각각이고 능력에 따라 다르다.  유닛테스트, e2e테스트 각각 툴이 있다. 유닛테스트는 그 언어로 해야되고, e2e는 편한걸로 하면 된다. 웹사이트에 나온 결과를 스크래핑해서 db 값과 일치하는지 비교하는 것이 테스트다. ","note4":"db.recent.find({time: {$gte: \"2021.11.16. 오후 1:00\", $lte: \"2021.11.16. 오후 1:02\"}, text_headline: {$regex: \"인천\"}}).count()\n\n질문\n1. chrome dev 에서 동작 javascript 코드 보는 법 \n\n<캐글 강의 스탠다임 강천성>\n- 컴퓨터공학 ai 전문 캐글 전문\n- 머신러닝은 General Function을 만드는 것이다.\n- 로그인 -> competition -> 진행중인 것 하나 들어가서 overview 등 다 보자.\n- Code 탭 가서 hottest 보자 , baseline 검색해서 코드 보자. 잘 보고 분석한다. object detection 이다 등을 알 수 있다. 코드는 다 갖다 쓰고 reference만 잘 남기면 된다. \n- 대회 참가 시 accelerator 뭐로 할 건지 고를 수 있다. cpu, gpu, tpu (tensor processing unit, tensorflow 전용). \n- 캐글에서 notebook 써서 바로 돌릴 수 있다. 시간제한은 있음. \n- 하다가 막히면 바로 커뮤니티에 질문 올리면 잘 도와준다. 팀으로 도전하자.\n- 윤수님 서울대 캐글 1등 막 함. 한국인 랭킹 보자 \n- 라인맨? Youhan lee\n- 여러가지 dataset 을 다양하게 경험해라. 기초가 탄탄해야 함. \n- slash word? 를 넘으면 ok, 아니면 false 이다. 기준은 50%가 아니다. 다양하고 실전 경험이 필요하다. \n- raw 데이터 모으면 일단 쓰레기 데이터이다. 전처리가 중요하다. \n- 대회는 하나 하면 1~2개월 매일 몇시간씩 써야 한다. 힘들다. \n- 캐글코리아 페이스북 페이지 가입해라 \n- SQL 쿼리는 기본이다. 능숙해야 함.\n- 데이터 파이프라인 생성은 어려운 일이다. 데이터 쏟아질 때 최고 효율로, 적은 데이터를 가지고 최대한 많은 걸 짜내고 서버를 유지하고 column 정리하고 할 줄 알아야 한다. 컴퓨터 지식 필요\n- data scientist는 연구이다. 연구 역량이 필요해서 석사 이상이다. 컴퓨터공학이 문제가 아니라 연구 역량이다. \n- 수학은 필수다. 선형대수 통계는 필수 \n- Python commit convention  검색해서 배워라. Github 페이지 잘 만드는 것도 능력이다 .\n- 파이썬 자동화: gcp mlops 검색, youtube, google 검색 자동으로 github에 코드 올리고 작동하고 등\n- 코랩 프로도 있다. 가성비 좋다.\n- 운영체제 공부해야 한다. \n- 몇개월동안 계란으로 바위치기 해서 팀원들이랑 노력해서 겨우 상위2% 한 것이다. 6개월동안 좋은 팀원이랑 포기하지 않고 끝까지 했다. \n- colab, kaggle notebook으로 우선 하고, 부족할 시 colab pro 하고, 그래도 부족할 시 그 때 gpu 장만을 생각해라. 어차피 몇 달은 있어야 부족함을 느낄 줄 알게 된다."}
